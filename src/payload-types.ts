/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
    customers: CustomerAuthOperations;
  };
  collections: {
    users: User;
    media: Media;
    products: Product;
    categories: Category;
    customers: Customer;
    addresses: Address;
    coupons: Coupon;
    orders: Order;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    'shipping-options': ShippingOption;
  };
  locale: null;
  user:
    | (User & {
        collection: 'users';
      })
    | (Customer & {
        collection: 'customers';
      });
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
export interface CustomerAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  slug?: string | null;
  title: string;
  description: string;
  category?: {
    relationTo: 'categories';
    value: number | Category;
  } | null;
  image?: (number | null) | Media;
  variants?:
    | {
        title: string;
        weight: number;
        price: number;
        comparePrice?: number | null;
        includedShippingCost?: number | null;
        slug?: string | null;
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers".
 */
export interface Customer {
  id: number;
  preferredAddress?: (number | null) | Address;
  pendingOrder?: (number | null) | Order;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "addresses".
 */
export interface Address {
  id: number;
  customer: number | Customer;
  name: string;
  address: string;
  phone: string;
  city: string;
  state:
    | 'AN'
    | 'AP'
    | 'AR'
    | 'AS'
    | 'BR'
    | 'CG'
    | 'CH'
    | 'DN'
    | 'DD'
    | 'DL'
    | 'GA'
    | 'GJ'
    | 'HR'
    | 'HP'
    | 'JK'
    | 'JH'
    | 'KA'
    | 'KL'
    | 'LA'
    | 'LD'
    | 'MP'
    | 'MH'
    | 'MN'
    | 'ML'
    | 'MZ'
    | 'NL'
    | 'OR'
    | 'PY'
    | 'PB'
    | 'RJ'
    | 'SK'
    | 'TN'
    | 'TS'
    | 'TR'
    | 'UP'
    | 'UK'
    | 'WB';
  pincode: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  customer: number | Customer;
  addressRef?: (number | null) | Address;
  name: string;
  address: string;
  phone: string;
  city: string;
  state:
    | 'AN'
    | 'AP'
    | 'AR'
    | 'AS'
    | 'BR'
    | 'CG'
    | 'CH'
    | 'DN'
    | 'DD'
    | 'DL'
    | 'GA'
    | 'GJ'
    | 'HR'
    | 'HP'
    | 'JK'
    | 'JH'
    | 'KA'
    | 'KL'
    | 'LA'
    | 'LD'
    | 'MP'
    | 'MH'
    | 'MN'
    | 'ML'
    | 'MZ'
    | 'NL'
    | 'OR'
    | 'PY'
    | 'PB'
    | 'RJ'
    | 'SK'
    | 'TN'
    | 'TS'
    | 'TR'
    | 'UP'
    | 'UK'
    | 'WB';
  pincode: string;
  products: {
    productRef?: (number | null) | Product;
    variantId: string;
    title: string;
    qty: number;
    price: number;
    weight: number;
    includedShippingCost?: number | null;
    id?: string | null;
  }[];
  afterOrder?: {
    trackLink?: string | null;
    status?: ('processing' | 'shipped' | 'completed') | null;
  };
  couponRef?: (number | null) | Coupon;
  coupon?: string | null;
  discount?: number | null;
  mode?: string | null;
  rate?: number | null;
  razorpay?: {
    orderId?: string | null;
    paymentId?: string | null;
    signature?: string | null;
    total?: number | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "coupons".
 */
export interface Coupon {
  id: number;
  is_active?: boolean | null;
  coupon: string;
  value: number;
  type: 'fixed' | 'percent';
  min_cart_value?: number | null;
  max_discount?: number | null;
  is_infinite: '1' | '0';
  max_use?: number | null;
  checkout_visible?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'customers';
        value: number | Customer;
      } | null)
    | ({
        relationTo: 'addresses';
        value: number | Address;
      } | null)
    | ({
        relationTo: 'coupons';
        value: number | Coupon;
      } | null)
    | ({
        relationTo: 'orders';
        value: number | Order;
      } | null);
  globalSlug?: string | null;
  user:
    | {
        relationTo: 'users';
        value: number | User;
      }
    | {
        relationTo: 'customers';
        value: number | Customer;
      };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user:
    | {
        relationTo: 'users';
        value: number | User;
      }
    | {
        relationTo: 'customers';
        value: number | Customer;
      };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shipping-options".
 */
export interface ShippingOption {
  id: number;
  option: {
    mode: string;
    rate: number;
    days?: number | null;
    id?: string | null;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}